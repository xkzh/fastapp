<template>
  <div style="display: flex; flex-direction: column;">
    <c-title show-back="true", title="收藏的文章", right-icon="/Common/Image/icon_add.png" oniconclick="onTitleIconClick"></c-title>
    <text class="click-tip">长按可分享文章~</text>
    <refresh @refresh="refresh" refreshing="{{isRefreshing}}">
    <list class="home-page" onscrollbottom="loadMoreData">
        <!-- 文章 -->
        <block for="articleList">
          <list-item type="article" class="article-item" onclick="openArticle($item.link, $item.title)" onlongpress="shareLink($item.link)">
            <div style="display: flex">
              <text class="text-title" style="flex: 1">{{$item.title}}</text>
              <image style="width: 52px;height: 52px;" src="../Common/Image/icon_collect.png" onclick="uncollect($item.id, $item.originId)"></image>
            </div>
            <div class="article-tip" if="{{ $item.chapterName !== '' }}">
                <text class="tip">分类: {{ $item.chapterName }}</text>
            </div>
            <div class="article-tip">
              <text class="tip">作者: {{$item.author}}</text>
              <text class="time">{{$item.niceDate}}</text>
            </div>
          </list-item>
        </block>

        <!-- 加载更多，type属性自定义命名为loadMore -->
        <list-item type="loadMore" class="load-more" if="articleList.length > 0">
          <progress type="circular" show="{{hasMoreData}}"></progress>
          <text show="{{hasMoreData}}">加载更多</text>
          <text show="{{!hasMoreData}}">没有更多了~</text>
        </list-item>
      </list>
    </refresh>
  </div>
</template>

<import name="c-title" src="../Common/Component/CTitle/index"></import>

<script>
  import {
    getCollectArticle,
    uncollect
  } from '../Common/Api/collect'

  export default {
    data: {
      articleList: [],
      page: 0,
      hasMoreData: true,
      isRefreshing: false
    },
    onInit () {
      this.refresh({refreshing: true})
    },
    onShow () {
      if (this.$app.$data.dataAddArticle && this.$app.$data.dataAddArticle.gotoPage === 'collectArticleList') {
        var data = this.$app.$data.dataAddArticle.params;
        if(data.success) {
          this.refresh({refreshing: true})
        }
      }
    },
    getCollectArticle() {
      getCollectArticle(this.page)
        .then((data) => {
          this.hasMoreData = !data.over
          if(this.page > 0) {
            this.articleList = this.articleList.concat(data.datas)
          } else {
            this.isRefreshing = false
            this.articleList = data.datas
          }
        })
        .catch((err) => {
          this.isRefreshing = false
        })
    },
    loadMoreData() {
      if(this.hasMoreData) {
        this.page++
        this.getCollectArticle()
      }
    },
    openArticle(link, title) {
      if(link !== '') {
        this.$app.$def.router.push({
          uri: 'Webview',
          params: { 
            title: title,
            url: link
          }
        })
      }
    },
    refresh(evt) {
      this.isRefreshing = evt.refreshing
      this.page = 0
      this.getCollectArticle()
    },
    uncollect(id, originId) {
      uncollect(id, originId)
        .then((data) => {
          this.refresh({refreshing: true})
          this.$app.$def.prompt.showToast({ message: '已取消收藏' })
        })
        .catch((err) => {
          this.$app.$def.prompt.showToast({ message: '取消收藏失败' })
        })
    },
    onTitleIconClick({ detail: { icon } }) {
      if(icon === 'right') {
        this.$app.$def.router.push({
          uri: 'AddCollectArticle'
        })
      }
    },
    shareLink(url) {
      this.$app.$def.share.share({
        type:"text/plain",
        data: url
      })
    }
  }
</script>

<style>
  .article-item {
    padding: 20px;
    display: flex;
    flex-direction: column;
    border-bottom-width: 1px;
    border-bottom-color: #eeeeee;
  }
  .article-item .text-title {
    font-size: 30px;
    color: #2e3135;
    text-overflow: ellipsis;
    lines: 1;
    margin-bottom: 5px;
  }
  .article-item .article-tip {
    display: flex;
    flex-direction: row;
  }
  .article-tip .tip, .article-tip .time {
    font-size: 26px;
    color: #999999;
  }
  .time {
    flex: 1;
    text-align: right;
  }
  .load-more {
    padding: 20px;
    display: flex;
    flex-direction: row;
    justify-content: center;
  }
  .click-tip {
    width: 100%;
    text-align: center;
    background-color: #eeeeee;
    padding: 10px;
  }
</style>
